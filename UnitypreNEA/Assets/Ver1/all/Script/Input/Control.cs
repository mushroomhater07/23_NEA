//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.1
//     from Assets/All/New Script/Script/Input/Control.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Control : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Control()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Control"",
    ""maps"": [
        {
            ""name"": ""BasicWalking"",
            ""id"": ""b873a37f-58df-4a3b-a430-74733d57a8fc"",
            ""actions"": [
                {
                    ""name"": ""Walk"",
                    ""type"": ""Value"",
                    ""id"": ""fc0e5b0a-f5af-4d99-8c12-6b4586276b9d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LookAround"",
                    ""type"": ""Value"",
                    ""id"": ""cf9769e0-4e30-4abd-8eb6-270c3a0e417f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Combat"",
                    ""type"": ""Button"",
                    ""id"": ""40168c0e-31ec-4965-8999-60cca65724aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Defense"",
                    ""type"": ""Button"",
                    ""id"": ""5dc4e6f2-9a7b-4b77-b45c-37a5c9d350ca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""6bee6726-6a74-457c-8111-aa8ad8c6d0f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""ea5d3908-16d9-44ce-b92e-d7b754c4b0cb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""044dec3f-3f06-48ac-9e69-82986272718f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""02c3067e-691b-42b1-901f-933d26cd4f2f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""513510ca-9228-4c79-a181-711ec7c46884"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""69ff709b-5e79-40f4-92ac-1fd05fc61a9e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow Key"",
                    ""id"": ""3f74b1fc-0b98-426c-936e-79c5a7890bcc"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""64c6c941-aa19-473a-be0a-404c21bff5f8"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3a515eb8-4ccb-4d22-9b81-f0190b912131"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e659151a-b14d-4494-b12c-362467d64a66"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ff60d460-70ce-458a-8287-302c2bf87231"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a6970c94-db8e-46f9-ade2-1742b4de8747"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LookAround"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41bdac37-b907-4c4c-9fb0-1612766e0654"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Combat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77e0c18b-2d4e-41d5-b597-8514ca97f267"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Defense"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1aed2b64-85e2-4f53-ba80-89ffaae6e43c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // BasicWalking
        m_BasicWalking = asset.FindActionMap("BasicWalking", throwIfNotFound: true);
        m_BasicWalking_Walk = m_BasicWalking.FindAction("Walk", throwIfNotFound: true);
        m_BasicWalking_LookAround = m_BasicWalking.FindAction("LookAround", throwIfNotFound: true);
        m_BasicWalking_Combat = m_BasicWalking.FindAction("Combat", throwIfNotFound: true);
        m_BasicWalking_Defense = m_BasicWalking.FindAction("Defense", throwIfNotFound: true);
        m_BasicWalking_Interact = m_BasicWalking.FindAction("Interact", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // BasicWalking
    private readonly InputActionMap m_BasicWalking;
    private IBasicWalkingActions m_BasicWalkingActionsCallbackInterface;
    private readonly InputAction m_BasicWalking_Walk;
    private readonly InputAction m_BasicWalking_LookAround;
    private readonly InputAction m_BasicWalking_Combat;
    private readonly InputAction m_BasicWalking_Defense;
    private readonly InputAction m_BasicWalking_Interact;
    public struct BasicWalkingActions
    {
        private @Control m_Wrapper;
        public BasicWalkingActions(@Control wrapper) { m_Wrapper = wrapper; }
        public InputAction @Walk => m_Wrapper.m_BasicWalking_Walk;
        public InputAction @LookAround => m_Wrapper.m_BasicWalking_LookAround;
        public InputAction @Combat => m_Wrapper.m_BasicWalking_Combat;
        public InputAction @Defense => m_Wrapper.m_BasicWalking_Defense;
        public InputAction @Interact => m_Wrapper.m_BasicWalking_Interact;
        public InputActionMap Get() { return m_Wrapper.m_BasicWalking; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BasicWalkingActions set) { return set.Get(); }
        public void SetCallbacks(IBasicWalkingActions instance)
        {
            if (m_Wrapper.m_BasicWalkingActionsCallbackInterface != null)
            {
                @Walk.started -= m_Wrapper.m_BasicWalkingActionsCallbackInterface.OnWalk;
                @Walk.performed -= m_Wrapper.m_BasicWalkingActionsCallbackInterface.OnWalk;
                @Walk.canceled -= m_Wrapper.m_BasicWalkingActionsCallbackInterface.OnWalk;
                @LookAround.started -= m_Wrapper.m_BasicWalkingActionsCallbackInterface.OnLookAround;
                @LookAround.performed -= m_Wrapper.m_BasicWalkingActionsCallbackInterface.OnLookAround;
                @LookAround.canceled -= m_Wrapper.m_BasicWalkingActionsCallbackInterface.OnLookAround;
                @Combat.started -= m_Wrapper.m_BasicWalkingActionsCallbackInterface.OnCombat;
                @Combat.performed -= m_Wrapper.m_BasicWalkingActionsCallbackInterface.OnCombat;
                @Combat.canceled -= m_Wrapper.m_BasicWalkingActionsCallbackInterface.OnCombat;
                @Defense.started -= m_Wrapper.m_BasicWalkingActionsCallbackInterface.OnDefense;
                @Defense.performed -= m_Wrapper.m_BasicWalkingActionsCallbackInterface.OnDefense;
                @Defense.canceled -= m_Wrapper.m_BasicWalkingActionsCallbackInterface.OnDefense;
                @Interact.started -= m_Wrapper.m_BasicWalkingActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_BasicWalkingActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_BasicWalkingActionsCallbackInterface.OnInteract;
            }
            m_Wrapper.m_BasicWalkingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Walk.started += instance.OnWalk;
                @Walk.performed += instance.OnWalk;
                @Walk.canceled += instance.OnWalk;
                @LookAround.started += instance.OnLookAround;
                @LookAround.performed += instance.OnLookAround;
                @LookAround.canceled += instance.OnLookAround;
                @Combat.started += instance.OnCombat;
                @Combat.performed += instance.OnCombat;
                @Combat.canceled += instance.OnCombat;
                @Defense.started += instance.OnDefense;
                @Defense.performed += instance.OnDefense;
                @Defense.canceled += instance.OnDefense;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
            }
        }
    }
    public BasicWalkingActions @BasicWalking => new BasicWalkingActions(this);
    public interface IBasicWalkingActions
    {
        void OnWalk(InputAction.CallbackContext context);
        void OnLookAround(InputAction.CallbackContext context);
        void OnCombat(InputAction.CallbackContext context);
        void OnDefense(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
    }
}
